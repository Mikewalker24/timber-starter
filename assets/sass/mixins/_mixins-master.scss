// Default psuedo element rules
@mixin pseudo($display: block, $pos: absolute, $content: '') {
	content: $content;
	display: $display;
	position: $pos;
}

// Responsive ratio
@mixin responsive-ratio($x, $y, $pseudo: false) {
	$padding: unquote( ( $y / $x) * 100 + '%');
	@if $pseudo {
		&:before {
			@include pseudo($pos: relative);
			width: 100%;
			padding-top: $padding;
		}
	}
	@else {
		padding-top: $padding;
	}
}

// Wrapper class
@mixin wrap {
	max-width: 1366px;
	width: 90%;
	margin: 0 auto;
}

//CSS triangles
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction==down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5);
	}
	@else if $direction==up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round( $size / 2.5);
	}
	@else if $direction==right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	}
	@else if $direction==left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

// Placeholders
@mixin placeholder {
  &.placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

// *
// *
// * Typography Mixins
// *
// *

// function - converts px to em
// Source: https://css-tricks.com/snippets/sass/px-to-em-functions/

// Example of PX to EM Usage:
// h1 {
//   font-size: em(32);
// }

$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em;
}

// function - converts px to rem
// Source: http://www.stubbornella.org/content/2013/07/01/easy-peasy-rem-conversion-with-sass/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

// Example of PX to REM Usage:
// h1 {
//  @include fontSize(32px);
// }

@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}

@mixin lineHeight($size) {
  line-height: $size; //Fallback in px
  line-height: calculateRem($size);
}
